{
  "description": "define a set of Kubernetes resources (StatefulSet, PVC, Service, ConfigMap) which describe behavior one ClickHouse Keeper cluster",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation\nof an object. Servers should convert recognized schemas to the latest\ninternal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this\nobject represents. Servers may infer this from the endpoint the client\nsubmits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "KeeperSpec defines the desired state of a Keeper cluster",
      "properties": {
        "configuration": {
          "description": "allows configure multiple aspects and behavior for `clickhouse-server` instance and also allows describe multiple `clickhouse-server` clusters inside one `chi` resource",
          "properties": {
            "clusters": {
              "description": "describes ClickHouseKeeper clusters layout and allows change settings on cluster-level and replica-level\n",
              "items": {
                "properties": {
                  "layout": {
                    "description": "describe current cluster layout, how many replicas\n",
                    "properties": {
                      "replicasCount": {
                        "description": "how many replicas in ClickHouseKeeper cluster",
                        "type": "integer"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "name": {
                    "description": "cluster name, used to identify set of ClickHouseKeeper servers and wide used during generate names of related Kubernetes resources",
                    "maxLength": 15,
                    "minLength": 1,
                    "pattern": "^[a-zA-Z0-9-]{0,15}$",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "settings": {
              "description": "allows configure multiple aspects and behavior for `clickhouse-keeper` instance",
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "namespaceDomainPattern": {
          "description": "Custom domain pattern which will be used for DNS names of `Service` or `Pod`.\nTypical use scenario - custom cluster domain in Kubernetes cluster\nExample: %s.svc.my.test\n",
          "type": "string"
        },
        "replicas": {
          "description": "Replicas is the expected size of the keeper cluster.\nThe valid range of size is from 1 to 7.\n",
          "format": "int32",
          "maximum": 7,
          "minimum": 1,
          "type": "integer"
        },
        "templates": {
          "description": "allows define templates which will use for render Kubernetes resources like StatefulSet, ConfigMap, Service, PVC, by default, clickhouse-operator have own templates, but you can override it",
          "properties": {
            "podTemplates": {
              "description": "podTemplate will use during render `Pod` inside `StatefulSet.spec` and allows define rendered `Pod.spec`, pod scheduling distribution and pod zone\nMore information: https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#spectemplatespodtemplates\n",
              "items": {
                "properties": {
                  "metadata": {
                    "description": "allows pass standard object's metadata from template to Pod\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n",
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  },
                  "name": {
                    "description": "template name, could use to link inside top-level `chi.spec.defaults.templates.podTemplate`, cluster-level `chi.spec.configuration.clusters.templates.podTemplate`, shard-level `chi.spec.configuration.clusters.layout.shards.temlates.podTemplate`, replica-level `chi.spec.configuration.clusters.layout.replicas.templates.podTemplate`",
                    "type": "string"
                  },
                  "spec": {
                    "description": "allows define whole Pod.spec inside StaefulSet.spec, look to https://kubernetes.io/docs/concepts/workloads/pods/#pod-templates for details",
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "serviceTemplates": {
              "description": "allows define template for rendering `Service` which would get endpoint from Pods which scoped chi-wide, cluster-wide, shard-wide, replica-wide level\n",
              "items": {
                "properties": {
                  "metadata": {
                    "description": "allows pass standard object's metadata from template to Service\nCould be use for define specificly for Cloud Provider metadata which impact to behavior of service\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n",
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  },
                  "name": {
                    "description": "template name, could use to link inside\nchi-level `chi.spec.defaults.templates.serviceTemplate`\ncluster-level `chi.spec.configuration.clusters.templates.clusterServiceTemplate`\nshard-level `chi.spec.configuration.clusters.layout.shards.temlates.shardServiceTemplate`\nreplica-level `chi.spec.configuration.clusters.layout.replicas.templates.replicaServiceTemplate` or `chi.spec.configuration.clusters.layout.shards.replicas.replicaServiceTemplate`\n",
                    "type": "string"
                  },
                  "spec": {
                    "description": "describe behavior of generated Service\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/\n",
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "volumeClaimTemplates": {
              "description": "allows define template for rendering `PVC` kubernetes resource, which would use inside `Pod` for mount clickhouse `data`, clickhouse `logs` or something else",
              "items": {
                "properties": {
                  "metadata": {
                    "description": "allows to pass standard object's metadata from template to PVC\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n",
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  },
                  "name": {
                    "description": "template name, could use to link inside\ntop-level `chi.spec.defaults.templates.dataVolumeClaimTemplate` or `chi.spec.defaults.templates.logVolumeClaimTemplate`,\ncluster-level `chi.spec.configuration.clusters.templates.dataVolumeClaimTemplate` or `chi.spec.configuration.clusters.templates.logVolumeClaimTemplate`,\nshard-level `chi.spec.configuration.clusters.layout.shards.temlates.dataVolumeClaimTemplate` or `chi.spec.configuration.clusters.layout.shards.temlates.logVolumeClaimTemplate`\nreplica-level `chi.spec.configuration.clusters.layout.replicas.templates.dataVolumeClaimTemplate` or `chi.spec.configuration.clusters.layout.replicas.templates.logVolumeClaimTemplate`\n",
                    "type": "string"
                  },
                  "spec": {
                    "description": "allows define all aspects of `PVC` resource\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims\n",
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "Current ClickHouseKeeperInstallation status, contains many fields like overall status, desired replicas and ready replica list with their endpoints\n",
      "properties": {
        "chop-commit": {
          "description": "ClickHouse operator git commit SHA",
          "type": "string"
        },
        "chop-date": {
          "description": "ClickHouse operator build date",
          "type": "string"
        },
        "chop-ip": {
          "description": "IP address of the operator's pod which managed this CHI",
          "type": "string"
        },
        "chop-version": {
          "description": "ClickHouse operator version",
          "type": "string"
        },
        "normalized": {
          "description": "Normalized CHK requested",
          "type": "object",
          "x-kubernetes-preserve-unknown-fields": true
        },
        "normalizedCompleted": {
          "description": "Normalized CHK completed",
          "type": "object",
          "x-kubernetes-preserve-unknown-fields": true
        },
        "readyReplicas": {
          "description": "ReadyReplicas is the array of endpoints of those ready replicas in the cluster",
          "items": {
            "properties": {
              "host": {
                "description": "dns name or ip address for Keeper node",
                "type": "string"
              },
              "port": {
                "description": "TCP port which used to connect to Keeper node",
                "maximum": 65535,
                "minimum": 0,
                "type": "integer"
              },
              "secure": {
                "description": "if a secure connection to Keeper is required",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "replicas": {
          "description": "Replicas is the number of number of desired replicas in the cluster",
          "format": "int32",
          "type": "integer"
        },
        "status": {
          "description": "Status",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "required": [
    "spec"
  ],
  "type": "object"
}
